plugins {
    id 'kotlin2js' version '1.3.31'
    id "org.kravemir.gradle.sass" version "1.2.2"
}

group = 'de.ascii'
version = '1.1.0'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js:1.3.31"
    implementation "de.westermann:KObserve-js:0.9.3"
}

clean.doFirst() {
    delete("web/website")
    delete("web/node_modules")
    delete("out")
}

compileKotlin2Js {
    kotlinOptions.moduleKind = "umd"
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
}

jar {
    includeEmptyDirs = false

    from {
        configurations.compileClasspath.collect {
            if (it.exists()) {
                ((it.isDirectory() || !it.exists()) ? it : zipTree(it)).getFiles().findAll {
                    it.name ==~ "^[a-zA-Z|-]+.js(.map)?\$"
                }
            } else {
                ArrayList
            }
        }
    }

    exclude "**/*.kjsm", "**/META-INF/*", "META-INF/*", "**/*meta*"
    into "website"
}

sass {
    main {
        srcDir = file("$projectDir/src/main/resources/stylesheets")
        outDir = file("$buildDir/resources/main/stylesheets")

        exclude = "**/*.css"
    }
}

task assembleWeb(type: Sync) {
    from compileKotlin2Js.destinationDir
    from kotlin.sourceSets.main.resources.srcDirs
    from kotlin.target.compilations.main.output
    kotlin.target.compilations.main.runtimeDependencyFiles.each {
        if (it.exists() && !it.isDirectory()) {
            from zipTree(it.absolutePath).matching {
                include '*.js'
                include '*.js.map'
                exclude '*.meta.js'
            }
        }
    }
    into "${projectDir}/web/website"

    dependsOn classes, sass
}

assemble.dependsOn assembleWeb
